@using Peacock.ViewModel.Manage
@using Peacock.Dal

@model PageResult<T_Pro_ProductGroup>

<section class="content-header">
    <h1>商品分组</h1>

    <div class="row">
        <div class="col-sm-4">
            @*<button class="btn btn-success j-btn-add">新增</button>*@
            <a href="/Product/ProductGroup/Edit" class="btn btn-success">新增</a>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <table id="table"></table>
        </div>
    </div>

</section>




@section Scripts {


    <script type="text/javascript">

        $(function () {
            let page = new pageHelper();
            page.Init();
        });

        function pageHelper() { };
        pageHelper.prototype.Init = function () {
            let self = this;
            $('#table').bootstrapTable({
                url: '/Product/ProductGroup/GetProductGroup',
                //url: '/Home/GetDepartment',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                //toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序  列中也有此变量
                sortName: 'Id',                     //定义要排序的列   没定义默认都不排列，同sortOrder结合使用，sortOrder没写的话列默认递增（asc）
                sortOrder: "asc",                   //定义列排序顺序，只能是'asc'或'desc'。
                sortStable: false,                   //如果你把此属性设为了true）我们将为此行添加'_position'属性 （别看错了，是sortStable，sortable在下面）设为true，则和sort部分一样，区别是：在排序过程中，如果存在相等的元素，则原来的顺序不会改变
                queryParams: self.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: true,                       //是否显示表格搜索
                searchOnEnterKey: true,             //是否输入回车才触发搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                columns: [{
                    checkbox: true
                }, {
                    field: 'Name',
                    title: '商品分组名',
                    sortable: true
                }, {
                    field: 'Code',
                    title: '编码',
                    sortable: true
                }, {
                    field: 'OrderId',
                    title: '序号',
                    sortable: true
                }, {
                    field: 'LastUpdatedTime',
                    title: '最后更新时间',
                    sortable: true
                }, {
                    field: 'Id',
                    title: '操作',
                    formatter: self.actionFormatter
                }],
                classes: 'table table-bordered table-hover',
                theadClasses: '',
                onLoadSuccess: function () {
                },
                onLoadError: function () {
                    //showTips("数据加载失败！");
                },
            });
        }

        pageHelper.prototype.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                order: params.order,
                orderName: params.sort,
                //departmentname: $("#txt_search_departmentname").val(),
                //statu: $("#txt_search_statu").val(),
                search: params.search
            };
            return temp;
        }

        //操作栏的格式化
        pageHelper.prototype.actionFormatter = function (value, row, index) {
            var id = value;
            var result = "";
            result += "<a href='/Product/ProductGroup/Edit?id=" + id +"' class='btn btn-xs green' onclick=\"EditViewById('" + id + "', view='view')\" title='查看'><span class='fa fa-fw fa-eye'></span></a>";
            result += "<a href='javascript:;' class='btn btn-xs blue' onclick=\"EditViewById('" + id + "')\" title='编辑'><span class='fa fa-fw fa-edit'></span></a>";
            result += "<a href='javascript:;' class='btn btn-xs red' onclick=\"DeleteByIds('" + id + "')\" title='删除'><span class='fa fa-fw fa-close'></span></a>";
            return result;
        }

        pageHelper.prototype.bindBtnEvent = function () {
            let self = this;

            $('.j-btn-add').on('click', function () {

            });
        }
    </script>
}
